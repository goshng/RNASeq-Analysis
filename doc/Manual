User Manual of RNASEQ Analysis
==============================
Sang Chul Choi <goshng@yahoo.co.kr>
v1.0, May 2011

Introduction
------------
A list of RNA-Seq data files are sampled from bacteria. I
analyze transcriptome of the bacteria. Three steps should be performed before
executing any menus provided by *RNASEQ Analysis*. Firstly, a configuration file
needs to be placed at +conf+ direcotry. Secondly, the software packages 
specified in the configuration file need to be installed. Thirdly, a species file
needs to be placed at +species+ directory, and the data files that are specified
in the species file need to be placed at the proper places.
Now, you are ready to start to analyze RNA-Seq samples using *RNASEQ Analysis*.

Execute the main menu using
----
$ ./run
----
First, call *init-file-system* to create directories for output files. Then,
call *choose-species* menu to create directories for your project.
The FASTQ files must be gzipped files. Try to call *fastq-summary*. The number
of reads in the FASTQ files will be shown. 

Output directory structures
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Output directories contains directories for species names in +species+
directory. A directory, e.g., +smutans+, contains one +run-analysis+ directory
and numbered directories. The directories with numbered names contains several
directories for analyses: +data+ would contain shared information such as genome
annotation, and +bwa+ would contains results from analyses using *BWA*. In the
BASH scripts I can access these directories using shell variables. See
+sh/global-variable.sh+ for details.

.Shell variables
----
SPECIES=smutans
BASERUNANALYSIS=output/smutans/run-analysis
REPETITION=1
DATADIR=output/smutans/1/data
BWADIR=output/smutans/1/bwa
----

FASTQ filtering
~~~~~~~~~~~~~~~
The raw FASTQ files needs proprocessing. I might change the name of this
procedure to *fastq-filter* because sampling short reads is one of two main
procedures in *fastq-sample*. 

Extract genome annotations
~~~~~~~~~~~~~~~~~~~~~~~~~~
You can extract bacterial genome annotations using *feature-genome* menu. To use
this menu identifier REFGENOMEPTT must be defined in the species file.
Downloaded bacterial genome directories from NCBI would contain a file with
+ptt+ extension.

.REFGENOMEPTT identifier in a species file
----
REFGENOMEPTT:bacteria/Streptococcus_mutans_UA159_uid57947/NC_004350.ptt
----

.Output files from genome annotations
----
$DATADIR/feature-genome.out-geneonly for protein coding genes
$DATADIR/feature-genome.out-intergenic for protein coding genes as well as intergenic regions
$DATADIR/feature-genome.out-intergeniconly for intergenic regions only
----

Extract DNA sequences using feature-genome
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
I can create a FASTA file of DNA sequences that are extracted from a reference
genome. Menu *extract-genome* is used to extract DNA sequences from a reference
genome using a BED file.

.FASTA files of extracted DNA sequences
----
$DATADIR/intergeniconly.fa is created using feature-genome.out-intergeniconly
----

BWA Alignment
~~~~~~~~~~~~~
Call *cp-genome* to copy the genome file in FASTA format to the data directory.
Call *bwa-index-genome* just right after *cp-genome* menu. 
Call *bwa-align* to produce the sorted alignment in BAM format.
Call *bwa-mpileup* to create pileup and wiggle files.

Now, call *fastq-summary* again to see the
proportions of short reads mapped on the reference genome.

Call *bwa-align*, *bwa-samse*, *bwa-samtools-view*, *bwa-samtools-sort*, and
*bwa-samtools-bed* menus in order. 
Menus from *bwa-align* to *bwa-samtools-bed* can be run in a single command
using *bwa-batch-align-to-bed*, which creates a +batch+ file at the base
directory. Just execute the +batch+ file with BASH shell.

.BWA alignment procedure
. +bwa index+ Index a reference genome
. +bwa aln+ Align short reads on the reference genome
. +bwa samse+ Convert SAI to SAM
. +samtools view -bS+ Convert SAM to BAM
. +samtools sort+ Sort BAM
. +samtools view+ Convert BAM to SAM

*bwa-align* produce the sorted alignment in BAM format. I do not use
*bwa-samse*, *bwa-samtools-view*, *bwa-samtools-sort*.

Call menu *bwa-mpileup* to create a pileup file, and to create a wiggle file to
upload RNA-Seq sample tracks. The species file should have READDEPTH, which is
used in +samtools mpileup+ -d option value. If the uploaded track is limited by
the value you specified, you should increase the value.
----
READDEPTH:300000
----

*bwa-summary* creates +sum.pos+ files. For example, +sum.pos+ files contains three
columns: short read names, start, and end positions of the short reads in the
reference sequence.
*bwa-summary* creates summary files: number of reads, number of reads uniquely
mapped. 
*bwa-summary* finds the total number of reads, the number of reads mapped.
A +sum+ file, e.g.,  output/omz/1/bwa/FASTQ01.sum, contains RNA-Seq short
sequence file, total number of the reads, and the number of short reads mapped.

Bowtie Alignemnt
~~~~~~~~~~~~~~~~
Call *bowtie-index-genome* and *bowtie-align* to index the reference genome, and
align short reads to the reference genome.

DESeq
~~~~~
Prepare a +gene.pos+ file that contains gene name, chromosome, start, and end
position. Let's use ptt file for getting genes positions. What menu do I use?
Menu *feature-genome* could find genes.

The number of reads in a gene, or _read count_, is known to be somewhat linear
to the abundance of the RNA transcript of the gene. I wish to test whether an
observed difference in read counts for a gene is statistically significant. For
this test I need a model for the expected number of reads. For a set of given
genes with a range of lengths the read counts would be distributed. The number
of reads that are assigned to a gene is assumed to be distributed as a negative
binomial distribution with a mean and a variance.

*deseq* works with _omz_ species.

Prepare a file named +gene.pos+ with 4 columns of gene name, chromosome name,
gene start, and gene end. UCSC genome browser can be used to extract information
of known genes: go to Table menu at the top of the UCSC genome browser of
http://strep-genome.bscb.cornell.edu/, click Table menu, choose 
Group +Genes and Gene Prediction Tracks+, track +Known Genes+, and choose output
format +selected fields from primary and related tables+.

.A script to create gene.pos file from the table from the UCSC genome browser
----
awk '{ print $4 "\t" $1 "\t" $2 "\t" $3}' hgTables.ua159 > ../output/smutans12/1/data/gene.pos
----

.A script to create a count.txt for UA159 and TW1-Glucose, and TW1-Glucose and
TW1-Galactose
----
awk '{ print $1 "\t" $2 "\t" $12 }' count.txt > count-1-11.txt
awk '{ print $1 "\t" $12 "\t" $4 }' count.txt > count-11-3.txt
----

Given the count data we can proceed to compare gene expression.

.A gene.pos file
----
SMU109_00005    SMU109-OMZ175.contig1   44      283
----

Call *bwa-summary* to create +FASTQXX-sum.pos+ file.

Menu *bwa-pos2wig* creates a wiggle file from a pos file that is created by menu
*bwa-summary*. I want to use short reads with exact match to the reference
genome. I will use this short reads to call transcripts. The wiggle file can be
used to find regions with positive values as potential transcripts.

.A pos file 
----
shortReadIdentifier chr shortReadStart shortReadEnd flag mapQuality xt nm x0 x1 xm xo xg md
----

DEGseq
~~~~~~
DEGseq takes uniquely mapped reads from RNA-seq data with a gene annotation as input.
After menu *bwa-samtools-bed* is finished, you can execute *bwa-degseq-bed* to
create a bed for detecting genes differentially expressed using DEGseq. DEGseq
requires a refflat file. Call menu *bowtie-refflat* to create the file. You need
to prepare a _refFlat_ file to convert bowtie mapped reads to expression data
that DEGseq can process.  Create a file with chrom, chromStart, chromEnd, name,
and strand using a UCSC genome browser or other method you would like. Go to
strep-genome.bscb.cornell.edu.  Clock Tables. Select S. mutans UA159. Select
Genes and Gene Prediction Tracks. Select Known Genes.  choose output format
+selected fields from primary and related tables+.  Then, click get output
Choose chrom, chromStart, chromEnd, name, and strand.  Click get output.  Note
that you have to make sure that genomic positions are 0-based or 1-based.  .The
table should look like this
----
#chrom  chromStart      chromEnd        name    strand
chr1    193     1552    SMU_01  +
chr1    1707    2844    SMU_02  +
----
Menu *degseq* takes two RNA-Seq samples to compare gene expression level.
Menus *bowtie-refflat* and *bwa-samtools-bed* must be called before the call of
*degseq*. You need to decide which RNA-Seq samples are compared.

edgeR
~~~~~
First, do DEGseq menu. Then, use this menu. I use the output file from DEGseq.

transcript-cufflinks
~~~~~~~~~~~~~~~~~~~~
You can use this menu to call transcripts.

Quick Start
-----------

.Start of a project
. Create a conf/README file using conf/README.template
. Execute menu *init-file-system*

.Index a genome file for BWA alignment
. Create a species file
. Execute menu *choose-species*
. Execute menu *cp-genome* 
. Execute menu *bwa-index-genome*

.Align short reads to a reference genome
. Execute menu *bwa-index-genome*
. Execute menu *bwa-align*

.Create genome tracks for the mapped reads
. First align reads to a reference genome
. Execute menu *bwa-align*
. Execute menu *bwa-mpileup*

.Shorten reads
. Execute menu *bwa-sample*


IMPORTANT: The following needs attention.

.Create wigggle files with read lengths
. After the execution of menu *bwa-samtools-bed*
. Execute menu *bwa-samtools-wig*

.Outdated
. Execute menu *bwa-R-saveimage*
. Execute menu *bwa-danko-writewiggle* 

.Create a refFile of genome annotation.
.  Create a file with chrom, chromStart, chromEnd, name, and strand using a UCSC
genome browser or other method you would like. Note that you have to make sure
that genomic positions are 0-based or 1-based.
. Execute menu *bowtie-refflat*. The menu would create a file such as
output/smutans12/run-analysis/refFlat.txt.

.Compare two gene expression

Configuration
-------------
File +conf/README.template+ must be used to create +conf/README+ that is used
for accessing files. 

Species File
------------
A genome of bacterial species.

Installation
------------
Software packages are employed for the analysis. These should be installed on
the local or remote machine.

BWA
~~~
Dowanload BWA source code at http://bio-bwa.sourceforge.net. You could compile
the source in this repository. Edit +conf/README+ if necessary.
----
$ cd src/bwa-0.5.9
$ make
----

BOWTIE
~~~~~~
Download BOWTIE and install it under +src+ directory. The following command
should print a help message from it. Edit +conf/README+ if necessary.
----
$ src/bowtie-0.12.7/bowtie
----

SAMTools
~~~~~~~~
Download SAMtools at http://samtools.sourceforge.net. You could compile the
source in this repository of rnaseq-analysis.
----
$ cd src/samtools-0.1.16
$ make
----

segemehl
~~~~~~~~
Download segemehl at http://www.bioinf.uni-leipzig.de/Software/segemehl. You
could compile the source in this repository of rnaseq-analysis.
http://www.bioinf.uni-leipzig.de/Software/segemehl/
----
$ cd src/segemehl_0_0_9_4
$ make
----

FASTAX-Toolkit
~~~~~~~~~~~~~~
Download FASTAX-Toolkit at
http://hannonlab.cshl.edu/fastx_toolkit/fastx_toolkit-0.0.13.tar.bz2
and 
http://hannonlab.cshl.edu/fastx_toolkit/libgtextutils-0.6.tar.bz2.

edgeR
~~~~~
In R, run the two lines of
----
source("http://www.bioconductor.org/biocLite.R")
biocLite("edgeR")
----

DEGseq
~~~~~~
In R, run the two lines of
----
source("http://www.bioconductor.org/biocLite.R")
biocLite("DEGseq")
----

TopHat
~~~~~~
Download the Mac OS X x86_64 binary from http://tophat.cbcb.umd.edu[here].
Untar it and add the directory to PATH so that I can run it without full path.

Cufflinks
~~~~~~~~~
Download the Mac OS X x86_64 binary from http://cufflinks.cbcb.umd.edu[here].
Untar it and add the directory to PATH so that I can run it without full path

Configuration
-------------

species
~~~~~~~

----
REFGENOMEGBK:bacteria/Streptococcus_mutans_UA159_uid57947/NC_004350.gbk
REFGENOMEFASTA:bacteria/Streptococcus_mutans_UA159_uid57947/NC_004350.fna
REFGENOMEGFF:bacteria/Streptococcus_mutans_UA159_uid57947/NC_004350.gff
REFGENOMELENGTH:2030921
READLENGTH:100
NUMFASTQFILE:2
FASTQ01:data/FASTQ01.gz
FASTQ02:data/FASTQ02.gz
----

Menus
-----

choose-species
~~~~~~~~~~~~~~
Create a file in +species+ directory before calling this menu.

fastq-sample
~~~~~~~~~~~~
Subsample the set of FASTQ files.
I subsample RNA-Seq short sequences. I can shorten RNA-Seq sequences.
I can keep reads with minimum lengths.


transcript-summary
~~~~~~~~~~~~~~~~~~
Transcripts are defined to be genomic features with constant expression. I use
RNA-Seq data to predict transcripts using either Martin's ParseRNAseq or Danko's
GROseq. I summarize the transcripts with known genes, small RNAs, and other
information.

How can I find the list of short reads that are not mapped? Use menu
*bwa-summary*. Use +pl/bwa-sam.pl+ with +unmapped+ command to create a FASTA
file with unmapped short reads.

job-truncate-reads-local
~~~~~~~~~~~~~~~~~~~~~~~~

Scripts
-------

.Subtract B from A where A and B are single-column number files
----
bash colsubtract.sh A B > C
----

Files
-----
Input and output files are created in *RNASeq Analysis*. 

feature-genome.out-intergeniconly
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A BED-format file contains intergenic regions of a reference genome.


